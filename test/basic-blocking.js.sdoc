Simple blocking queue tests

caterwaul.clone('std', 'error', 'queue.blocking')(function () {
  var q = this[caterwaul].queue.blocking(3), callbacks = {};

  q(fn[free_cc][callbacks.first = free_cc]);
  callbacks.first || error.fail['Failed to synchronously invoke the first callback on an empty queue'];

  q(fn[free_cc][callbacks.second = free_cc]);
  callbacks.second || error.fail['Failed to synchronously invoke the second callback'];

  q(fn[free_cc][callbacks.third = free_cc]);
  callbacks.third || error.fail['Failed to synchronously invoke the third callback'];

  q(fn[free_cc][callbacks.fourth = free_cc]);
  callbacks.fourth && error.fail['Failed to block on the fourth'];

  q(fn[free_cc][callbacks.fifth = free_cc]);
  callbacks.fifth && error.fail['Failed to block on the fifth'];

  callbacks.first();
  callbacks.fourth || error.fail['Failed to invoke the fourth after freeing one'];

  callbacks.second();
  callbacks.fifth || error.fail['Failed to invoke the fifth after freeing one'];

  callbacks.third();
  callbacks.fourth();
  callbacks.fifth();

  var count = 0;
  q(fn_[++count]);
  q(fn_[++count]);
  q(fn_[++count]);

  count === 3 || error.fail['Queue failed to return to an empty state'];
})();
